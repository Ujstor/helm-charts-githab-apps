image:
  repository: ujstor/django_todolist
  pullPolicy: IfNotPresent
  tag: "1.0.1"
replicaCount: 1
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
podLabels: {}
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 64Mi
service:
  type: ClusterIP
  port: 8050
  targetPort: 8050
ingress:
  enabled: true
  className: "nginx"
  annotations: 
    cert-manager.io/cluster-issuer: "letsencrypt" 
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: django-todo.ujstor.com
      paths:
        - path: /
          pathType: Prefix
  tls:
   - secretName: django-todo-htmx-tls
     hosts:
       - django-todo.ujstor.com

postgres-cluster:
  postgresVersion: 16
  instanceMemory: 500Mi
  instanceCPU: 250m
  instanceReplicas: 1
  instances:
    - name: todo-htmx-go
      replicas: 1
      dataVolumeClaimSpec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: 100Mi
  port: 5432
  patroni:
    dynamicConfiguration:
      postgresql:
        pg_hba:
          - local all postgres trust
          - local all all trust
          - host all all all md5
  #allow goose migrations
  users:
    - name: todo-django
      databases:
        - todo-django
      options: "SUPERUSER"
  # Add minimal backup configuration
  pgBackRestConfig:
    repos:
      - name: repo1
        volume:
          volumeClaimSpec:
            accessModes:
              - "ReadWriteOnce"
            resources:
              requests:
                storage: 100Mi

secret-store:
  secretStore:
    clusterWide: false
    provider:
      type: kubernetes
      kubernetes:
        auth:
          serviceAccount:
            create: true
            name: "django-todo-secret-store-sa"
